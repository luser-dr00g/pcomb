(pc7.ps) run

<<
/listpush { exch 1 index load 2 array astore def }
/listpop  { dup load aload pop exch 3 1 roll def }

/nodes []
/fetch    { /nodes listpop }
/stash    { /nodes listpush }

/do-dot     {{ pop                        any   stash } action}
/do-char    {{                            term  stash } action}
/do-meta    {{            fetch exch  cvx exec  stash } action}
/do-factors {{ pop  fetch fetch exch      seq2  stash } action}
/do-terms   {{ pop  fetch fetch exch      alt2  stash } action}

/dpx { dup print cvx exec }
>> begin

/Dot        (.)                                                  def
/Meta       (*+?)     char-class                                 def
/Character  (*+?.|()) char-class inverse                         def
/Expression 7 array cvx                                          def
/Atom       <<
		//Dot  do-dot
		[ (\() //Expression (\)) ]
		//Character  do-char
	    >>                                                   def
/Factor     [  //Atom   //Meta  do-meta  ?  ]                    def
/Term       [  //Factor  //Factor  do-factors  *  ]              def

	    [  //Term  [  (|)  //Term  do-terms  ] *  ] parser
//Expression                                                copy pop

/regex {
    //Expression exec  length 0 eq { pop /regex cvx /syntaxerror signalerror } if
    fetch
} def

/r (a(b.)+) regex def
//r 0 get =

((a) r pc ) dpx
((ab) r pc ) dpx
((abx) r pc ) dpx
((abxb) r pc ) dpx
((abxx) r pc ) dpx
((abxbx) r pc ) dpx
((abxabx) r pc ) dpx
((axbxx) r pc ) dpx



quit
